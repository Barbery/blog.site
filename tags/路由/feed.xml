<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>路由 on Barbery&#39;s Blog</title>
    <link>http://barbery.me/tags/%E8%B7%AF%E7%94%B1/</link>
    <description>Recent content in 路由 on Barbery&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 16 Nov 2014 10:22:00 +0000</lastBuildDate>
    <atom:link href="http://barbery.me/tags/%E8%B7%AF%E7%94%B1/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>goRouter 一个轻量级和高性能的路由</title>
      <link>http://barbery.me/post/2014-11-16-goRouter%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Sun, 16 Nov 2014 10:22:00 +0000</pubDate>
      
      <guid>http://barbery.me/post/2014-11-16-goRouter%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E8%B7%AF%E7%94%B1/</guid>
      <description>&lt;p&gt;公司有个go的小项目，主要是对内提供web服务，而go原生的router太弱了，上网搜索了下，本来打算用github.com/drone/routes 这个库的，但是这库对url不能很好的支持，例如要匹配/user/1/userinfo.json这样的url，这个库就没办法支持。&lt;/p&gt;

&lt;p&gt;所以自己就参考drone/routes 写了一个小router，主要是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;改善了url正则匹配的，使其匹配更多模式，更加可以自由定制&lt;/li&gt;
&lt;li&gt;提高了匹配时查找的性能，使用路由的前缀和http方法做hashtable查找，路由再多，查找平均也是o(1)的时间复杂度&lt;/ul&gt;
&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果觉得不错，欢迎star&lt;/p&gt;

&lt;p&gt;源码：&lt;a href=&#34;https://github.com/Barbery/goRouter&#34; title=&#34;https://github.com/Barbery/goRouter&#34;&gt;https://github.com/Barbery/goRouter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>学习如何写PHP MVC框架（1）-- 路由</title>
      <link>http://barbery.me/post/2013-03-07-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%86%99PHPMVC%E6%A1%86%E6%9E%B6%EF%BC%881%EF%BC%89--%E8%B7%AF%E7%94%B1/</link>
      <pubDate>Thu, 07 Mar 2013 21:29:00 +0000</pubDate>
      
      <guid>http://barbery.me/post/2013-03-07-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%86%99PHPMVC%E6%A1%86%E6%9E%B6%EF%BC%881%EF%BC%89--%E8%B7%AF%E7%94%B1/</guid>
      <description>&lt;p&gt;说到PHP开发web，自然离不开开发框架，开发框架为我们提供了灵活的开发方式，MVC层分离，业务解耦等。。。&lt;/p&gt;

&lt;p&gt;第一篇先来简单点的，说说MVC框架的路由功能。。。&lt;/p&gt;

&lt;p&gt;一般的单入口框架路由都是这样的结构：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;domain/index.php/classname/functionname/var1/var2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这里的index.php 就被称为入口文件。。。对于服务器而言，你这里访问的就只有index.php 后面调用的controller 和里面的方法，甚至传值都是在框架内部基于PHP层面实现的。&lt;/p&gt;

&lt;p&gt;Talk is cheap, show you the code !!&lt;/p&gt;

&lt;p&gt;首先，先建立好下面的文件结构&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t1.qpic.cn/mblogpic/9140c8ad2d21b21a4490/460&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我们来动手试试，怎么才能访问到controllers里面的文件。。。&lt;/p&gt;

&lt;p&gt;在index.php里面输入以下内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;print_r($_SERVER);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后访问 以下地址试试。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;yourdomain/index.php/class/function/var1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这里作者我是用本地环境的，我访问的地址是localhost/MVC/index.php/class/function/var1&lt;/p&gt;

&lt;p&gt;我贴出最重要的2个变量&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[REQUEST_URI] =&amp;gt; /MVC/index.php/class/function/var1&lt;/p&gt;

&lt;p&gt;[SCRIPT_NAME] =&amp;gt; /MVC/index.php&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实路由最基本的原理就在这里：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;通过这2个变量来提取url地址里的class 和 function，参数等，然后把class include进来，通过PHP的回调函数  call_user_func_array 调用对应的function和传递相应的参数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;接下来上代码，读代码应该比我写的易懂。哈哈~~&lt;/p&gt;

&lt;p&gt;index.php 的内容如下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

# 定义application路径
define(&#39;APPPATH&#39;, trim(__DIR__,&#39;/&#39;));

# 获得请求地址
$root = $_SERVER[&#39;SCRIPT_NAME&#39;];
$request = $_SERVER[&#39;REQUEST_URI&#39;];

$URI = array();

# 获得index.php 后面的地址
$url = trim(str_replace($root, &#39;&#39;, $request), &#39;/&#39;);

# 如果为空，则是访问根地址
if (empty($url))
{
    # 默认控制器和默认方法
    $class = &#39;index&#39;;
    $func = &#39;welcome&#39;;
}
else
{
    $URI = explode(&#39;/&#39;, $url);

    # 如果function为空 则默认访问index
    if (count($URI) &amp;lt; 2)
    {
        $class = $URI[0];
        $func = &#39;index&#39;;
    }
    else
    {
        $class = $URI[0];
        $func = $URI[1];
    }
}


# 把class加载进来
include(APPPATH . &#39;/&#39; . &#39;application/controllers/&#39; . $class . &#39;.php&#39;);

#实例化
$obj = new ucfirst($class);

call_user_func_array(
    # 调用内部function
    array($obj,$func),
    # 传递参数
    array_slice($URI, 2)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;在application/controllers 里面添加下面2个文件&lt;/p&gt;

&lt;p&gt;index.php   用于作为默认控制器&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

class Index
{

    function welcome()
    {
        echo &#39;I am default controller&#39;;
    }

}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;hello.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
class Hello
{
    public function index()
    {
        echo &#39;hello world&#39;;
    }

    public function name($name)
    {
        echo &#39;hello &#39; . $name;
    }
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;测试一下看看，能不能访问了。根据上面的路由结构。我们来试试&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t2.qpic.cn/mblogpic/9fd64907545eeef548fa/460&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这个访问正常，正确调用了hello这个class内部的name方法，然后把参数barbery传递过去了。。。&lt;/p&gt;

&lt;p&gt;再试试不输入function name，看看能不能默认调用index。。&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t2.qpic.cn/mblogpic/815743451a85ca325b86/460&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;答案也是可以的。。。&lt;/p&gt;

&lt;p&gt;最后一个，访问root地址看看&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t2.qpic.cn/mblogpic/cd465ada7fa0f9c00f4c/460&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;也正确的映射到了默认控制器上。。。&lt;/p&gt;

&lt;p&gt;ok，一个简单的MVC路由功能就完成了。。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>