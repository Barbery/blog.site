<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Virtualbox on Barbery&#39;s Blog</title>
    <link>http://barbery.me/tags/virtualbox/</link>
    <description>Recent content in Virtualbox on Barbery&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 19 Nov 2015 16:39:13 +0000</lastBuildDate>
    <atom:link href="http://barbery.me/tags/virtualbox/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>说说怎么给virtualbox扩容</title>
      <link>http://barbery.me/post/2015-11-19-%E8%AF%B4%E8%AF%B4%E6%80%8E%E4%B9%88%E7%BB%99virtualbox%E6%89%A9%E5%AE%B9/</link>
      <pubDate>Thu, 19 Nov 2015 16:39:13 +0000</pubDate>
      
      <guid>http://barbery.me/post/2015-11-19-%E8%AF%B4%E8%AF%B4%E6%80%8E%E4%B9%88%E7%BB%99virtualbox%E6%89%A9%E5%AE%B9/</guid>
      <description>&lt;p&gt;前几天用vagrant+virtualbox+docker 来搭建本地开发环境，由于要导入的SQL太大，virtualbox的容量被挤爆了，而vagrant创建时似乎是不能指定容量大小的，系统默认分配的16G明显不够用。。。上网找了下，有些教程操作过程中报错，没法进行下去，有些教程又很长，看起来很复杂。。。自己折腾了下，其实非常简单。&lt;/p&gt;

&lt;p&gt;首先找到自己box的安装位置，默认应该都是安装在 ~/VirtualBox VMs/default-xxxxxxx/ 下的，打开命令行终端，进入目录下。。。如果你发现你的xxxx.vdi格式的话，那么恭喜你，这个格式扩容很简单，直接执行&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$&amp;gt; VBoxManage modifyhd xxxx.vdi  &amp;ndash;resize 30000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;后面30000代表30000MB约等于30G，根据自己的实际需要调整。&lt;/p&gt;

&lt;p&gt;实际上，我们看到的文件格式很大概率是xxxxxx.vmdk，不用怕，也很简单。。。&lt;/p&gt;

&lt;p&gt;首先，先利用virtualbox提供的工具，将其格式转换成vdi。。。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$&amp;gt; VBoxManage clonehd xxxx.vmdk xxxx.vdi &amp;ndash;format=vdi&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;等待一会儿，转换完成后，就会在目录上出现一个xxxx.vdi的文件，这个文件就是克隆自你原来的那个文件，只是把格式换成了vdi，再执行上面我说的扩容的命令，就可以实现这个vdi的容量扩容。&lt;/p&gt;

&lt;p&gt;扩容完成后，打开virtualbox GUI程序（就是点击virtualbox图标运行界面程序），找到你刚刚扩容的那个box，右键设置-&amp;gt;储存，在储存器 IDE Controller那里点击添加磁盘&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww2.sinaimg.cn/large/6915c7dcgw1ey6dbhb450j207x067mxg.jpg&#34; alt=&#34;图片&#34; /&gt;&lt;/p&gt;

&lt;p&gt;然后选择”选择现有虚拟盘”选项，找到刚刚生成的vdi文件，添加进去，然后点击之前的盘符，点击下方的删除磁盘的ico删掉即可（请先自行备份之前的文件）&lt;/p&gt;

&lt;p&gt;还有一点，就是要保证添加进来的vdi磁盘设置如下所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww3.sinaimg.cn/large/6915c7dcgw1ey6dfr4ckfj207x0650t4.jpg&#34; alt=&#34;图片&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于团队协助开发的一些想法</title>
      <link>http://barbery.me/post/2014-06-30-%E5%85%B3%E4%BA%8E%E5%9B%A2%E9%98%9F%E5%8D%8F%E5%8A%A9%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</link>
      <pubDate>Mon, 30 Jun 2014 22:16:00 +0000</pubDate>
      
      <guid>http://barbery.me/post/2014-06-30-%E5%85%B3%E4%BA%8E%E5%9B%A2%E9%98%9F%E5%8D%8F%E5%8A%A9%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</guid>
      <description>

&lt;p&gt;关于团队协助开发，遇到比较多的就是两类问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;开发环境不统一的问题&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;代码管理问题&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;1-开发环境不统一的问题&#34;&gt;1. 开发环境不统一的问题&lt;/h3&gt;

&lt;p&gt;自从在上家公司离职后，就一直在想，怎么才能很好的解决开发环境不统一的问题。。。测试可能在window 下开发，前端可能在mac os下开发，后端可能在ubuntu下，怎么才能跨平台解决不兼容的问题，做到整个团队统一开发环境，再也不怕，“为什么我这里可以，你的机器就报错”这类问题了~~&lt;/p&gt;

&lt;p&gt;经过几个月的实践操作，我发现借助vagrant + virtualbox可以很好的解决这个问题。。。首先vagrant 和 virtual box都是跨平台的产品，可以很好的兼容在不同的系统上安装。。。其次，不改变团队每个员工的现有开发习惯和coding环境，vagrant会挂载一个共享文件夹，开发还是通过原有的开发习惯开发，访问的却是通过端口转发或者ip绑定的方法来直接访问虚拟机里面的服务。。。最后，借助vagrant打包，团队分发，做到团队完全一致的运行环境，甚至还可以把包纳入版本管理，让团队随意切换包的版本。。。&lt;/p&gt;

&lt;p&gt;目前我们的团队统一使用的环境就是ubuntu12.04, web的服务全部跑在ubuntu下，源码放到共享文件夹里面，这样就可以使用本机系统的IDE等开发工具开发，然后跑的却是ubuntu系统里面的服务。。。&lt;/p&gt;

&lt;p&gt;不得不说vagrant真是统一开发环境的神器，想了解vagrant的详细操作，推荐一篇好文：&lt;a href=&#34;http://blog.segmentfault.com/fenbox/1190000000264347&#34; title=&#34;http://blog.segmentfault.com/fenbox/1190000000264347&#34;&gt;http://blog.segmentfault.com/fenbox/1190000000264347&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;2-代码管理问题&#34;&gt;2. 代码管理问题&lt;/h3&gt;

&lt;p&gt;代码管理问题的话，遇到比较麻烦的就是冲突问题，或者是提交不清晰，导致需要做回滚操作的时候，浪费大量时间去找。。&lt;/p&gt;

&lt;p&gt;这里我暂时认为，使用git flow规范来开发是比较好的一个解决方法。。。&lt;/p&gt;

&lt;p&gt;在日常开发上，提倡团队成员多commit，可以等功能全部完善再push到代码库里面，多commit，对以后查找很有帮助。&lt;/p&gt;

&lt;p&gt;这里推荐一篇文章：&lt;a href=&#34;https://ruby-china.org/topics/15737&#34; target=&#34;_blank&#34;&gt;写出好的 commit message&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>