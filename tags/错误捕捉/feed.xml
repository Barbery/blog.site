<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>错误捕捉 on Barbery&#39;s Blog</title>
    <link>http://barbery.me/tags/%E9%94%99%E8%AF%AF%E6%8D%95%E6%8D%89/</link>
    <description>Recent content in 错误捕捉 on Barbery&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 20 Mar 2013 11:41:16 +0000</lastBuildDate>
    <atom:link href="http://barbery.me/tags/%E9%94%99%E8%AF%AF%E6%8D%95%E6%8D%89/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>学习如何写PHP MVC框架（4） — 错误捕捉</title>
      <link>http://barbery.me/post/2013-03-20-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%86%99PHPMVC%E6%A1%86%E6%9E%B6%EF%BC%884%EF%BC%89%E2%80%94%E9%94%99%E8%AF%AF%E6%8D%95%E6%8D%89/</link>
      <pubDate>Wed, 20 Mar 2013 11:41:16 +0000</pubDate>
      
      <guid>http://barbery.me/post/2013-03-20-%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%86%99PHPMVC%E6%A1%86%E6%9E%B6%EF%BC%884%EF%BC%89%E2%80%94%E9%94%99%E8%AF%AF%E6%8D%95%E6%8D%89/</guid>
      <description>&lt;p&gt;前三篇文章已经把MVC的结构原理都简单的进行了说明和演示。。。当然，不是说一个框架就只有那点东西，一个良好的框架所要求的功能还是要很全面的，例如友好的错误输出，安全处理，防止跨域攻击等&lt;/p&gt;

&lt;p&gt;好了，我们一步一步来。。。。这节要说的是错误捕捉。。。其实这个不难，只要理解2个方法就可以做好错误捕捉的程序。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;register_shutdown_function(&#39;functionname&#39;);
set_error_handler(&#39;functionname&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一个方法，是注册一个shutdown的回调函数，当php脚本关闭时调用，当然这个关闭可以是正常的代码执行完毕，也可以是程序抛出致命错误关闭的脚本，那我怎么区分呢？别急，php还有一个方法叫error_get_last() 就像函数名说的那样，获取php最后一个错误信息，这样就可以判断是代码正常执行完毕还是遇到fatal error。。。&lt;/p&gt;

&lt;p&gt;第二个方法，是注册一个error的回调函数，当脚本执行遇到错误时调用。&lt;/p&gt;

&lt;p&gt;这2个方法最大的区别是，第一个是脚本关闭调用，也就是1次访问，只会调用一次(因为发生致命错误脚本就退出执行了)，二第二个方法的触发调用是发生错误的时候，例如访问数组中不存在的index，使用未定义的变量，就是这些warning，notice错误的捕捉。。。如果你想更了解二者的区别，建议访问php官网查看文档说明。。。&lt;/p&gt;

&lt;p&gt;这里我就不贴代码了，有兴趣的同学，可以去github那里下回来慢慢看。。。&lt;/p&gt;

&lt;p&gt;fork me：&lt;a href=&#34;https://github.com/Barbery/mvc.git&#34; title=&#34;https://github.com/Barbery/mvc.git&#34;&gt;https://github.com/Barbery/mvc.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们来看看最终的效果。。。我们来试试访问不存在的controller里的方法试试&lt;/p&gt;

&lt;p&gt;先看看没有错误捕捉的时候：&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t2.qpic.cn/mblogpic/2560f99968ee8c74987e/2000&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再来对比下做了错误捕捉的时候&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;&#34; src=&#34;http://t1.qpic.cn/mblogpic/bf757af39c2f7ce667e2/2000&#34; alt=&#34;&#34; width=&#34;&#34; height=&#34;&#34; border=&#34;0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;除了显示上比较友好外，还防止了文件名和路径的暴漏。。。其实还有一个很重要的功能是，log，记录代码运行的错误信息，对于一个网站管理者而言是非常重要的，可以及时知道网站的bug。。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>