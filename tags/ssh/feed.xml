<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on Barbery&#39;s Blog</title>
    <link>http://barbery.me/tags/ssh/</link>
    <description>Recent content in Ssh on Barbery&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 25 Sep 2015 09:35:01 +0000</lastBuildDate>
    <atom:link href="http://barbery.me/tags/ssh/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mosh - 妈妈再也不用担心我ssh连接断开了</title>
      <link>http://barbery.me/post/2015-09-25-mosh-%E5%A6%88%E5%A6%88%E5%86%8D%E4%B9%9F%E4%B8%8D%E7%94%A8%E6%8B%85%E5%BF%83%E6%88%91ssh%E8%BF%9E%E6%8E%A5%E6%96%AD%E5%BC%80%E4%BA%86/</link>
      <pubDate>Fri, 25 Sep 2015 09:35:01 +0000</pubDate>
      
      <guid>http://barbery.me/post/2015-09-25-mosh-%E5%A6%88%E5%A6%88%E5%86%8D%E4%B9%9F%E4%B8%8D%E7%94%A8%E6%8B%85%E5%BF%83%E6%88%91ssh%E8%BF%9E%E6%8E%A5%E6%96%AD%E5%BC%80%E4%BA%86/</guid>
      <description>

&lt;h2 id=&#34;mosh是什么&#34;&gt;mosh是什么&lt;/h2&gt;

&lt;p&gt;最近了解到mosh这个神器，免费开源产品，用来代替ssh连接的，它支持UDP协议的连接，支持SSH key验证。&lt;/p&gt;

&lt;p&gt;你可能会问，说了那么多，用mosh究竟有什么好处？&lt;/p&gt;

&lt;p&gt;像我这样，blog搭在国外服务器上，常常需要ssh登陆国外的服务器，然而这速度，你懂的，非常不稳定，在事情做到一半的时候连接断掉了，真的想死有木有。。。mosh是基于UDP协议的，断开后都可以自动重连，重连还是连接回上次的session哦，不是新的session，也就是看起来和没断开过连接一样，像MacBook这样，合起来待机再也不用担心断开连接了。。。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&#34;如何安装&#34;&gt;如何安装&lt;/h2&gt;

&lt;p&gt;好了好了，说说怎么用吧，使用mosh的话，需要装mosh的客户端和mosh的服务端。。。&lt;/p&gt;

&lt;p&gt;服务端的话很简单，直接源安装就好了，ubuntu/debian系列直接&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install mosh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;客户端的话，目前官方还不支持windows，目前只支持linux和mac os，不过有个chrome的mosh插件，windows下安装可以曲线救国&lt;a href=&#34;https://chrome.google.com/webstore/detail/mosh/ooiklbnjmhbcgemelgfhaeaocllobloj&#34;&gt;https://chrome.google.com/webstore/detail/mosh/ooiklbnjmhbcgemelgfhaeaocllobloj&lt;/a&gt;。另外，可以从&lt;a href=&#34;https://mosh.mit.edu/#getting&#34;&gt;https://mosh.mit.edu/#getting&lt;/a&gt; 这里面下载客户端，和查看怎么安装服务端。&lt;/p&gt;

&lt;h2 id=&#34;如何使用&#34;&gt;如何使用 &lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;mosh USERNAME@HOST [&amp;ndash;ssh=&amp;ldquo;ssh -p 2222&amp;rdquo;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果端口非22的话，可以使用后面中括号的参数来指定端口。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何通过本地SSH隧道端口转发访问远程mysql服务</title>
      <link>http://barbery.me/post/2013-11-23-%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%9C%AC%E5%9C%B0SSH%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E8%BF%9C%E7%A8%8Bmysql%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sat, 23 Nov 2013 15:36:44 +0000</pubDate>
      
      <guid>http://barbery.me/post/2013-11-23-%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%9C%AC%E5%9C%B0SSH%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E8%AE%BF%E9%97%AE%E8%BF%9C%E7%A8%8Bmysql%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;注意：以下内容的前提是，你已经配好了SSH KEY登录远程服务器，且禁止了password登录，否则，以下做法很危险。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;假设：&lt;/p&gt;

&lt;p&gt;远程mysql服务器地址为: 3.3.3.3&lt;/p&gt;

&lt;p&gt;本机地址为:192.168.0.1&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;建立SSH隧道连接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;原理是利用ssh命令在本机开个端口，这个端口为隧道的入口端口，通过SSH隧道转发端口达到访问远程mysql服务。简单来说，可以理解为本地端口到远程服务器端口的一个映射，而中间靠的就是SSH，利用SSH KEY验证登录可以使得用户可以安全连接远程服务。。废话少说，这里以本机3388端口为例子，请看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 参数解释
# -C    使用压缩功能，是可选的，加快速度。
# -P    用一个非特权端口进行出去的连接。
# -f    一旦SSH完成认证并建立port forwarding，则转入后台运行。
# -N    不执行远程命令。该参数在只打开转发端口时很有用（V2版本SSH支持）
ssh -NCPf root@3.3.3.3 -L 3388:192.168.0.1:3306
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里的root@3.3.3.3 是登陆mysql这个远程服务器的SSH用户名和IP地址-L 3388:192.168.0.1:3306 这个参数的意思是说在本机开放IP为192.168.0.1，端口为3388到 IP为3.3.3.3，端口为3306的映射，也就是说隧道的入口为3388出口为mysql服务器的3306。。。如果你的IP不是你设定的这个192.168.0.1就会被远程服务器拒绝。。你可能会问，我是拨号连接的，IP常常要变怎么办。。。放心，你可以设置为任意IP，只要把192.168.0.1这个IP写成0.0.0.0就可以了，系统就知道是任意ip都可以连接了。。。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;执行完后查看本地连接情况&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;netstat -tulnp | grep 3388
tcp    0    0 127.0.0.1:3388    0.0.0.0:*    LISTEN    14273/ssh
tcp    0    0 ::1:3388    :::*    LISTEN    14273/ssh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通过隧道连接MySQL服务器测试一下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u dbname -P 3388 -h 127.0.0.1 -pdbpwd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果登录进去了，就说明成功了！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>